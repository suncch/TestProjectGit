<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:util="http://www.springframework.org/schema/util" 
	xsi:schemaLocation=" 
          http://www.springframework.org/schema/beans 
          http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
          http://www.springframework.org/schema/tx 
          http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
          http://www.springframework.org/schema/context 
          http://www.springframework.org/schema/context/spring-context-3.0.xsd 
          http://www.springframework.org/schema/util 
		  http://www.springframework.org/schema/util/spring-util-3.0.xsd
          http://www.springframework.org/schema/aop 
          http://www.springframework.org/schema/aop/spring-aop-3.0.xsd"
	>

	<!-- Root Context: defines shared resources visible to all other web components -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
		p:location="/WEB-INF/spring/jdbc.properties" />
	
	<util:properties id="app_properties" location="classpath:sys.properties" local-override="true"/>

		<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close" p:driverClassName="${jdbc.driverClassName}"
		p:url="${jdbc.databaseurl}" p:defaultCatalog="" p:username="${jdbc.username}"
		p:password="${jdbc.password}" />
		<bean id="dataSource2" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close" p:driverClassName="${jdbc.driverClassName2}"
		p:url="${jdbc.databaseurl2}" p:defaultCatalog="" p:username="${jdbc.username2}"
		p:password="${jdbc.password2}" />
        <bean id="dataSource3" class="org.apache.commons.dbcp.BasicDataSource"
        destroy-method="close" p:driverClassName="${jdbc.driverClassName3}"
        p:url="${jdbc.databaseurl3}" p:defaultCatalog="" p:username="${jdbc.username3}"
        p:password="${jdbc.password3}" />

	<!-- transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" p:defaultEncoding="utf-8" >
		<property name="resolveLazily" value="true"/>
		<property name="maxUploadSize" value="2147483648"/>		<!-- 2G = 2 * 1024 * 1024 * 1024 -->
	</bean>  
	
	<util:properties id="settings" location="/WEB-INF/spring/jdbc.properties" />
	
	<bean id="throwsAdvice" class="com.sinyd.sframe.util.aspect.ThrowableManage"/>
	<bean id="beanNameAutoProxyCreator" class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
       <property name="beanNames">
            <list><value>*Service</value></list>
       </property>
       <property name="interceptorNames"><value>throwsAdvice</value></property>
	</bean>
	<aop:aspectj-autoproxy/>
	
	<!-- 验证码组件配置 -->
	<bean id="captchaProducer" class="com.google.code.kaptcha.impl.DefaultKaptcha">
		<property name="config">
			<bean class="com.google.code.kaptcha.util.Config">
				<constructor-arg>
					<props>
						<prop key="kaptcha.border">no</prop>
						<prop key="kaptcha.border.color">105,179,90</prop>
						<prop key="kaptcha.textproducer.font.color">red</prop>
						<prop key="kaptcha.image.width">250</prop>
						<prop key="kaptcha.textproducer.font.size">120</prop>
						<prop key="kaptcha.image.height">160</prop>
						<prop key="kaptcha.session.key">code</prop>
						<prop key="kaptcha.textproducer.char.length">4</prop>
						<prop key="kaptcha.textproducer.font.names">宋体,宋体,宋体</prop>
					</props>
				</constructor-arg>
			</bean>
		</property>
	</bean>
	
	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<context:component-scan base-package="com.founder.fix, com.sinyd">
        <context:exclude-filter type="regex" expression="com.sinyd.lnram.*.web.*" /> 
    </context:component-scan>
    
	<!-- aop配置 -->
	<aop:config>
		<!-- 事务切入点 -->
		<aop:pointcut id="txPointcut" expression="execution(* com.sinyd.lnram.*.service.*.*(..))" />
		<!-- <aop:advisor advice-ref="transactionAdvice" pointcut-ref="txPointcut" /> -->
		<!-- <aop:advisor advice-ref="fixflowInterceptor" pointcut-ref="txPointcut"  /> -->
	</aop:config>
	
	<import resource="job-context.xml" />
</beans>
